#!/usr/bin/env node
const COMMAND = process.argv[2];

const NPX = 'npx --no --';
const JEST = `${NPX} cross-env TZ=America/Sao_Paulo jest`;
const BUILD_DEV = `${NPX} cross-env NODE_ENV=development rollup -c`;
const BUILD_PROD = `${NPX} cross-env NODE_ENV=production rollup -c`;

const commands = {
  // dev: `${NPX} nodemon --exec "npm run build" --delay 1.5 --watch src -e ts,tsx,js,jsx`,
  dev: `${BUILD_DEV} --watch`,
  prebuild: `${NPX} rimraf lib/`,
  build: BUILD_DEV,
  'build-prod': BUILD_PROD,
  test: `${JEST} --coverage`,
  'test-update': `${JEST} --coverage -u`,
  'test-ci': `${JEST} --ci`,
  lint: `${NPX} eslint src/**/*.{ts,tsx,js,jsx}`,
  prepack: BUILD_PROD
};

const command = commands[COMMAND];

if (!command) {
  console.error('Command invalid!');
  process.exit(1);
}

function execCommand(command) {
  // eslint-disable-next-line @typescript-eslint/no-var-requires
  require('child_process')
    .spawn(command, {
      shell: true,
      stdio: [process.stdin, process.stdout, process.stderr]
    })
    .on('close', process.exit);
}

execCommand(command);
