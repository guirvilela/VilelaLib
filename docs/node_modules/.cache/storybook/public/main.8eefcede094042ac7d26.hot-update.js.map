{"version":3,"file":"main.8eefcede094042ac7d26.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/IA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACzsources":["webpack://@hubert/docs/./src/2-design-system/organisms/hub-yes-no/index.tsx","webpack://@hubert/docs/./src/2-design-system/organisms/hub-yes-no/storyConfig.ts","webpack://@hubert/docs/../packages/organisms/lib/index.esm.js","webpack://@hubert/docs/./src/3-libs/editor/index.mdx"],"sourcesContent":["import { HubButton } from '@hubert/atoms';\r\nimport { HubYesNo } from '@hubert/organisms';\r\nimport React from 'react';\r\n\r\nimport { useAct } from '@hubert/http';\r\nimport { HubYesNoProps, HubYesNoStoryConfig } from './storyConfig';\r\n\r\nexport const Default = (args: HubYesNoProps) => {\r\n  const [opened, setOpened] = React.useState(false);\r\n  const [motivo, setMotivo] = React.useState('');\r\n\r\n  const action = useAct(\r\n    () =>\r\n      new Promise((resolve, reject) =>\r\n        setTimeout(\r\n          () =>\r\n            motivo ? resolve(true) : reject(new Error('Informar o motivo!')),\r\n          1500\r\n        )\r\n      ),\r\n    {\r\n      onSuccess() {\r\n        setOpened(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <HubButton onClick={() => setOpened(true)}>Open Modal</HubButton>\r\n      <HubYesNo\r\n        {...args}\r\n        opened={opened}\r\n        status=\"error\"\r\n        title=\"Tem certeza que deseja remover este item?\"\r\n        action={action}\r\n        placeholder=\"Motivo\"\r\n        value={motivo}\r\n        onChange={setMotivo}\r\n        onDone={() => action()}\r\n        onClose={() => setOpened(false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HubYesNoStoryConfig;\r\n","import { HubYesNo } from '@hubert/organisms';\r\nimport { Meta } from '@storybook/react';\r\n\r\nexport type HubYesNoProps = React.ComponentProps<typeof HubYesNo>;\r\n\r\nexport const HubYesNoStoryConfig: Meta<HubYesNoProps> = {\r\n  title: 'Design System/Organisms/HubYesNo',\r\n  component: HubYesNo,\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        component: `\r\n    import { HubYesNo } from \"@hubert/organisms\";\r\n        `\r\n      }\r\n    }\r\n  },\r\n  args: {},\r\n  argTypes: {\r\n    extends: {\r\n      description:\r\n        'Visualizar props estendida <a href=\"/?path=/docs/design-system-molecules-hubmodalalert--default\">aqui</a>',\r\n      table: {\r\n        type: {\r\n          summary: 'HubModalAlert'\r\n        }\r\n      }\r\n    },\r\n    opened: {\r\n      control: 'boolean',\r\n      defaultValue: false,\r\n      description: 'Show modal',\r\n      table: {\r\n        type: {\r\n          summary: 'boolean'\r\n        },\r\n        defaultValue: {\r\n          summary: 'false'\r\n        }\r\n      }\r\n    },\r\n    action: {\r\n      defaultValue: undefined,\r\n      description: 'Http action to set: messages, status, loading and disable',\r\n      table: {\r\n        type: {\r\n          summary: 'Action',\r\n          detail: `import { Action } from '@hubert/http';`\r\n        },\r\n        defaultValue: {\r\n          summary: 'empty'\r\n        }\r\n      }\r\n    },\r\n    labelCancel: {\r\n      defaultValue: '',\r\n      description: 'change NO button label',\r\n      table: {\r\n        type: {\r\n          summary: 'ReactNode'\r\n        },\r\n        defaultValue: {\r\n          summary: 'empty'\r\n        }\r\n      },\r\n      control: 'text'\r\n    },\r\n    labelDone: {\r\n      defaultValue: '',\r\n      description: 'change YES button label',\r\n      table: {\r\n        type: {\r\n          summary: 'ReactNode'\r\n        },\r\n        defaultValue: {\r\n          summary: 'empty'\r\n        }\r\n      },\r\n      control: 'text'\r\n    },\r\n    onDone: {\r\n      defaultValue: undefined,\r\n      description: 'Call on click done button',\r\n      table: {\r\n        type: {\r\n          summary: 'Function'\r\n        },\r\n        defaultValue: {\r\n          summary: 'empty'\r\n        }\r\n      }\r\n    },\r\n    onClose: {\r\n      defaultValue: undefined,\r\n      description: 'Call on click close button or overlay',\r\n      table: {\r\n        type: {\r\n          summary: 'Function'\r\n        },\r\n        defaultValue: {\r\n          summary: 'empty'\r\n        }\r\n      }\r\n    },\r\n    placeholder: {\r\n      defaultValue: '',\r\n      description: 'show input and set placeholder',\r\n      table: {\r\n        type: {\r\n          summary: 'String'\r\n        },\r\n        defaultValue: {\r\n          summary: 'empty'\r\n        }\r\n      },\r\n      control: 'text'\r\n    },\r\n    value: {\r\n      defaultValue: '',\r\n      description: 'show input and set value',\r\n      table: {\r\n        type: {\r\n          summary: 'String'\r\n        },\r\n        defaultValue: {\r\n          summary: 'empty'\r\n        }\r\n      },\r\n      control: 'text'\r\n    },\r\n    onChange: {\r\n      defaultValue: undefined,\r\n      description: 'show input and set onchange',\r\n      table: {\r\n        type: {\r\n          summary: 'Function'\r\n        },\r\n        defaultValue: {\r\n          summary: 'empty'\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","import { HubGrid, HubTextField } from '@hubert/atoms';\nimport { useI18nMessage } from '@hubert/i18n';\nimport { HubModalAlert } from '@hubert/molecules';\nimport { factoryTestId } from '@hubert/shared';\nimport React from 'react';\n\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = _objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var s = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.includes(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\n\nvar _excluded = [\"title\", \"content\", \"placeholder\", \"action\", \"value\", \"onChange\", \"onClose\", \"onDone\"];\nfunction HubYesNo(_ref) {\n  var title = _ref.title,\n    content = _ref.content,\n    placeholder = _ref.placeholder,\n    action = _ref.action,\n    value = _ref.value,\n    onChange = _ref.onChange,\n    onClose = _ref.onClose,\n    onDone = _ref.onDone,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var t = useI18nMessage();\n  return /*#__PURE__*/React.createElement(HubModalAlert, _extends({}, props, {\n    title: title,\n    loading: action === null || action === void 0 ? void 0 : action.loading,\n    message: action === null || action === void 0 ? void 0 : action.error,\n    content: /*#__PURE__*/React.createElement(HubGrid, {\n      gap: \"3\"\n    }, content, onChange && /*#__PURE__*/React.createElement(HubGrid, {\n      row: true\n    }, /*#__PURE__*/React.createElement(HubTextField, {\n      id: \"hub-yes-no-input\",\n      \"data-testid\": factoryTestId(props, 'input'),\n      type: \"area\",\n      rows: 3,\n      placeholder: placeholder,\n      value: value,\n      onChange: onChange,\n      autoFocus: true,\n      required: true\n    }))),\n    labelCancel: t('hub-yes-no_cancel'),\n    labelDone: t('hub-yes-no_done'),\n    onClose: onClose,\n    onDone: onDone\n  }));\n}\n\nexport { HubYesNo };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\nimport {Fragment as _Fragment, jsxDEV as _jsxDEV} from \"react/jsx-dev-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {HubEditor} from '@hubert/editor';\nimport {Meta} from '@storybook/addon-docs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(Meta, {\n      title: \"Libs/Editor/Overview\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h1, {\n      children: \"Editor\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Esta biblioteca contem e deve somente conter codigo relacionado a editor de texto e afins para js/ts.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"Como utilizar\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      children: _jsxDEV(_components.code, {\n        children: \"npm i @hubert/editor\\n\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 12,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 12,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Exemplo:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 16,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      children: _jsxDEV(_components.code, {\n        className: \"language-jsx\",\n        children: \"import React from 'react';\\r\\nimport { HubEditor } from '@hubert/editor';\\r\\n\\r\\n<HubEditor\\r\\n  initialValue={'<p>This is the initial content of the editor.</p>'}\\r\\n  onChange={(v) => v /* Content edited */}\\r\\n/>;\\n\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 18,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 18,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(HubEditor, {\n      initialValue: \"<p>This is the initial content of the editor.</p>\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 28,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"...\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 30,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Keep calm and code on 🤘.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 32,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsxDEV(MDXLayout, Object.assign({}, props, {\n    children: _jsxDEV(_createMdxContent, props, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }), undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\n// =========\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Libs/Editor/Overview', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;"],"names":[],"sourceRoot":""}