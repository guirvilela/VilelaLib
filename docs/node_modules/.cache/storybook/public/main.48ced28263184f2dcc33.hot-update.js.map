{"version":3,"file":"main.48ced28263184f2dcc33.hot-update.js","mappingssources":["webpack://@hubert/docs/./src/1-guide/testing/1.mdx"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\nimport {Fragment as _Fragment, jsxDEV as _jsxDEV} from \"react/jsx-dev-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {Meta} from '@storybook/addon-docs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    blockquote: \"blockquote\",\n    p: \"p\",\n    a: \"a\",\n    h1: \"h1\",\n    h2: \"h2\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    hr: \"hr\",\n    img: \"img\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(Meta, {\n      title: \"Guide/Testing/Primeiros passos\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 3,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.blockquote, {\n      children: [\"\\n\", _jsxDEV(_components.p, {\n        children: _jsxDEV(_components.a, {\n          href: \"/?path=/docs/guide-testing-summary--page\",\n          children: \"Voltar ao sumário\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 5,\n          columnNumber: 3\n        }, this)\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 5,\n        columnNumber: 3\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 5,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h1, {\n      children: \"Primeiros passos com Testing com Jest\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 7,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"Comandos para testar os componentes\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 9,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: _jsxDEV(_components.strong, {\n        children: \"1. Atualizar e executar todos os testes do projeto.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 11,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 11,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Atualiza os snapshots dos testes existentes. Útil quando você tem mudanças intencionais na interface ou no comportamento do componente e quer refletir essas mudanças nos testes de snapshot.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 13,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      children: _jsxDEV(_components.code, {\n        children: \"  npm run test:update\\n\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 15,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 15,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: _jsxDEV(_components.strong, {\n        children: \"2. Executa os teste e deixa em modo observação.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 19,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 19,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"O teste é reexecutado automaticamente sempre que há mudanças no código. Ideal para desenvolvimento contínuo e iterações rápidas.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 21,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      children: _jsxDEV(_components.code, {\n        children: \"  npm run test:watch\\n\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 23,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 23,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: _jsxDEV(_components.strong, {\n        children: \"2.1 Executar num arquivo específico\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 27,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 27,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Ao executar uma pasta específica, evita de ficar testando outros componentes.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 29,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      children: _jsxDEV(_components.code, {\n        children: \"npm run test:watch -- --coverage /src/components/financeiro-page/detalhes-pagamentos-page/detalhe-pagamento-modal-add-arquivo\\n\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 31,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 31,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: _jsxDEV(_components.strong, {\n        children: \"3. Execução de Testes Otimizada para Integração Contínua\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 35,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 35,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Ele desativa a geração de alguns arquivos de relatório, priorizando a eficiência no processo de testes. Além disso, ao identificar uma falha em algum teste, o Jest interrompe imediatamente a execução e retorna um sinal de erro, fazendo com que o agente de CI trave o pipeline, evitando que o processo continue em caso de falhas críticas.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 37,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      children: _jsxDEV(_components.code, {\n        children: \"  npm run test:ci\\n\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 39,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 39,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: _jsxDEV(_components.strong, {\n        children: \"4. Execução de Testes que falharam\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 43,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 43,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      children: _jsxDEV(_components.code, {\n        children: \"  npm run test:fails\\n\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 45,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 45,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: _jsxDEV(_components.strong, {\n        children: \"5. Update de Testes que falharam\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 49,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 49,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      children: _jsxDEV(_components.code, {\n        children: \"  npm run test:update:fails\\n\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 51,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 51,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 55,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"Estruturas de pastas\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 57,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: _jsxDEV(_components.img, {\n        src: \"/assets/img/tests-guide/guide-testing-folders-structure.png\",\n        alt: \"testid structure\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 59,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 59,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: _jsxDEV(_components.strong, {\n        children: \"Pasta Snapshots\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 61,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 61,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Esta pasta é gerada automaticamente ao executar o comando abaixo, quando o teste de \\\"matches snapshot\\\" é renderizado corretamente.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 63,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      children: _jsxDEV(_components.code, {\n        children: \"npm run test:update\\n\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 65,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 65,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: _jsxDEV(_components.strong, {\n        children: \"Pasta index.test.tsx\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 69,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 69,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ul, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: \"Pasta na qual contem todos os testes do componente principal e que será reconhecida automaticamente para executar os testes.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 71,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 71,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: _jsxDEV(_components.strong, {\n        children: \"Pasta index.tsx\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 73,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 73,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Componente principal na qual vai ser testado\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 75,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 77,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"Abrir o Coverage\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 79,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Após a execução dos testes, você pode abrir o coverage (relatório de cobertura de código) para verificar a cobertura de testes de seu componente.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 81,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Abra o a pasta Covegage e identifique o index.html\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 83,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: _jsxDEV(_components.strong, {\n        children: \"Visualizar Coverage\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 85,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 85,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ul, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: \"Instale a Extensão \\\"Live Server\\\"\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 87,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: \"Aperte com botão direito no index.html\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 88,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: \"Selecione \\\"Open with Live server\\\"\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 89,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 87,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.blockquote, {\n      children: [\"\\n\", _jsxDEV(_components.p, {\n        children: [\"Extensão... \", _jsxDEV(_components.a, {\n          href: \"https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer\",\n          children: \"Live server 💻\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 91,\n        columnNumber: 3\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 91,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: _jsxDEV(_components.img, {\n        src: \"/assets/img/tests-guide/guide-testing-folder-coverage.png\",\n        alt: \"testid folder coverage\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 93,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 93,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: _jsxDEV(_components.strong, {\n        children: \"Executar projeto com Coverage\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 95,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 95,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Execute o comando de teste com a flag --coverage para atualizar a pasta index.html\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 97,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: _jsxDEV(_components.img, {\n        src: \"/assets/img/tests-guide/guide-testing-coverage.png\",\n        alt: \"testid coverage\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 99,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 99,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.blockquote, {\n      children: [\"\\n\", _jsxDEV(_components.p, {\n        children: [\"Próximo passo... \", _jsxDEV(_components.a, {\n          href: \"/?path=/docs/guide-testing-estrutura-teste--page\",\n          children: \"Estrutura dos Testes 💻\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 101,\n          columnNumber: 20\n        }, this)]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 101,\n        columnNumber: 3\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 101,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 103,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Keep calm and code on 🤘.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 105,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsxDEV(MDXLayout, Object.assign({}, props, {\n    children: _jsxDEV(_createMdxContent, props, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }), undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\n// =========\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Guide/Testing/Primeiros passos', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;"],"names":[],"sourceRoot":""}