"use strict";
self["webpackHotUpdate_hubert_docs"]("main",{

/***/ "./src/1-guide/testing/5.mdx":
/*!***********************************!*\
  !*** ./src/1-guide/testing/5.mdx ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __page: () => (/* binding */ __page),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var C_Users_guirv_Desenvolvimento_Hubert_hubert_lib_front_node_modules_core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/core-js/modules/es.object.assign.js */ "../node_modules/core-js/modules/es.object.assign.js");
/* harmony import */ var C_Users_guirv_Desenvolvimento_Hubert_hubert_lib_front_node_modules_core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(C_Users_guirv_Desenvolvimento_Hubert_hubert_lib_front_node_modules_core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @storybook/addon-docs */ "../node_modules/@storybook/addon-docs/dist/esm/index.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-dev-runtime */ "../node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @mdx-js/react */ "../node_modules/@mdx-js/react/lib/index.js");



/*@jsxRuntime automatic @jsxImportSource react*/




function _createMdxContent(props) {
  var _components = Object.assign({
    blockquote: "blockquote",
    p: "p",
    a: "a",
    h1: "h1",
    h2: "h2",
    pre: "pre",
    code: "code",
    strong: "strong"
  }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.useMDXComponents)(), props.components);
  return (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment, {
    children: [(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.Meta, {
      title: "Guide/Testing/Inputs"
    }, undefined, false, {
      fileName: "<source.js>",
      lineNumber: 3,
      columnNumber: 1
    }, this), "\n", (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_components.blockquote, {
      children: ["\n", (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_components.p, {
        children: (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_components.a, {
          href: "/?path=/docs/guide-testing-summary--page",
          children: "Voltar ao sumário"
        }, undefined, false, {
          fileName: "<source.js>",
          lineNumber: 5,
          columnNumber: 3
        }, this)
      }, undefined, false, {
        fileName: "<source.js>",
        lineNumber: 5,
        columnNumber: 3
      }, this), "\n"]
    }, undefined, true, {
      fileName: "<source.js>",
      lineNumber: 5,
      columnNumber: 1
    }, this), "\n", (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_components.h1, {
      children: "Testar inputs com Jest"
    }, undefined, false, {
      fileName: "<source.js>",
      lineNumber: 7,
      columnNumber: 1
    }, this), "\n", (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_components.h2, {
      children: "onChange do input"
    }, undefined, false, {
      fileName: "<source.js>",
      lineNumber: 9,
      columnNumber: 1
    }, this), "\n", (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_components.pre, {
      children: (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_components.code, {
        className: "language-typescript",
        children: "<HubTextField\r\n  data-testid=\"component-input-test\"\r\n  readOnly={!canEdit}\r\n  id=\"componentInput\"\r\n  required\r\n  placeholder={t('component-input-placeholder')}\r\n  value={formCreateArea.value.dados?.nome}\r\n  loading={configuracaoArea.loading}\r\n  onChange={(v) =>\r\n    formCreateArea.set('dados')({\r\n      ...formCreateArea.value.dados,\r\n      nome: v\r\n    })\r\n  }\r\n>\r\n  {t('component-input-label')}\r\n</HubTextField>\n"
      }, undefined, false, {
        fileName: "<source.js>",
        lineNumber: 11,
        columnNumber: 1
      }, this)
    }, undefined, false, {
      fileName: "<source.js>",
      lineNumber: 11,
      columnNumber: 1
    }, this), "\n", (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_components.p, {
      children: (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_components.strong, {
        children: "No teste colocamos \"-input\" pois está configurado na lib que essa prop vai pegar a ref do input"
      }, undefined, false, {
        fileName: "<source.js>",
        lineNumber: 31,
        columnNumber: 1
      }, this)
    }, undefined, false, {
      fileName: "<source.js>",
      lineNumber: 31,
      columnNumber: 1
    }, this), "\n", (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_components.pre, {
      children: (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_components.code, {
        className: "language-typescript",
        children: "it('should be able change areaName input', () => {\r\n  const useSetForm = jest.fn();\r\n  const { getByTestId } = renderComponent({\r\n    formCreateArea: useFormMock<AreasNewFormProps>({ set: () => useSetForm })\r\n  });\r\n  const textAreaNameInput = getByTestId('component-input-test-input');\r\n  expect(textAreaNameInput).toBeInTheDocument();\r\n\r\n  fireEvent.change(textAreaNameInput, { target: { value: 'Academia' } });\r\n\r\n  expect(useSetForm).toBeCalledWith({\r\n    nome: 'Academia'\r\n  });\r\n});\n"
      }, undefined, false, {
        fileName: "<source.js>",
        lineNumber: 33,
        columnNumber: 1
      }, this)
    }, undefined, false, {
      fileName: "<source.js>",
      lineNumber: 33,
      columnNumber: 1
    }, this), "\n", (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_components.h2, {
      children: "Input de Radio"
    }, undefined, false, {
      fileName: "<source.js>",
      lineNumber: 50,
      columnNumber: 1
    }, this), "\n", (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_components.pre, {
      children: (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_components.code, {
        className: "language-typescript",
        children: "<HubGrid row gap=\"3\">\r\n  <HubRadio\r\n    id=\"component-sindico-s\"\r\n    checked={form.value.radioComponent}\r\n    onClick={() =>\r\n      form.setAll({\r\n        radioComponent: true\r\n      })\r\n    }\r\n  >\r\n    <HubText typo=\"body2\" weight=\"600\">\r\n      {t('reuse_yes')}\r\n    </HubText>\r\n  </HubRadio>\r\n\r\n  <HubRadio\r\n    id=\"component-sindico-n\"\r\n    checked={!form.value.radioComponent}\r\n    onClick={() =>\r\n      form.setAll({\r\n        radioComponent: false\r\n      })\r\n    }\r\n  >\r\n    <HubText typo=\"body2\" weight=\"600\">\r\n      {t('reuse_no')}\r\n    </HubText>\r\n  </HubRadio>\r\n</HubGrid>\n"
      }, undefined, false, {
        fileName: "<source.js>",
        lineNumber: 52,
        columnNumber: 1
      }, this)
    }, undefined, false, {
      fileName: "<source.js>",
      lineNumber: 52,
      columnNumber: 1
    }, this), "\n", (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_components.pre, {
      children: (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_components.code, {
        className: "language-typescript",
        children: "it('Should be able click on radio true', () => {\r\n  const onMarkRadioMock = jest.fn();\r\n\r\n  const { getByText } = renderComponent({\r\n    isRpa: true,\r\n    form: useFormMock<PutEditOPRequest>({\r\n      value: factoryContratosNewFormInitialValue(TipoCadastro.Contrato),\r\n      spySetAll: onMarkRadioMock\r\n    })\r\n  });\r\n\r\n  const radioServico = getByText('reuse_yes');\r\n\r\n  fireEvent.click(radioServico);\r\n\r\n  expect(onMarkRadioMock).toHaveBeenCalledWith({\r\n    radioComponent: true\r\n  });\r\n});\n"
      }, undefined, false, {
        fileName: "<source.js>",
        lineNumber: 84,
        columnNumber: 1
      }, this)
    }, undefined, false, {
      fileName: "<source.js>",
      lineNumber: 84,
      columnNumber: 1
    }, this)]
  }, undefined, true, {
    fileName: "<source.js>",
    lineNumber: 1,
    columnNumber: 1
  }, this);
}
function MDXContent() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _Object$assign = Object.assign({}, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.useMDXComponents)(), props.components),
    MDXLayout = _Object$assign.wrapper;
  return MDXLayout ? (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(MDXLayout, Object.assign({}, props, {
    children: (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_createMdxContent, props, undefined, false, {
      fileName: "<source.js>"
    }, this)
  }), undefined, false, {
    fileName: "<source.js>"
  }, this) : _createMdxContent(props);
}
// =========
var __page = function __page() {
  throw new Error("Docs-only story");
};
__page.parameters = {
  docsOnly: true
};
var componentMeta = {
  title: 'Guide/Testing/Inputs',
  includeStories: ["__page"]
};
var mdxStoryNameToKey = {};
componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = Object.assign({}, componentMeta.parameters.docs || {}, {
  page: function page() {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.AddContext, {
      mdxStoryNameToKey: mdxStoryNameToKey,
      mdxComponentAnnotations: componentMeta
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(MDXContent, null));
  }
});
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (componentMeta);

/***/ })

});
//# sourceMappingURL=main.877215b9c91546924a5c.hot-update.js.map