{"version":3,"file":"main.ec393b1ad07e92012bf5.hot-update.js","mappingssources":["webpack://@hubert/docs/./src/1-guide/11-testing.mdx"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\nimport {Fragment as _Fragment, jsxDEV as _jsxDEV} from \"react/jsx-dev-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {Meta} from '@storybook/addon-docs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    code: \"code\",\n    strong: \"strong\",\n    pre: \"pre\",\n    hr: \"hr\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(Meta, {\n      title: \"Guide/Testing\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 3,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h1, {\n      children: \"Testing\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 5,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Utilizamos essa seção para compartilhar conhecimento sobre desenvolvimento de testes.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 7,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: [\"Principais Tópicos para Testar o Componente \", _jsxDEV(_components.code, {\n        children: \"DetalhePagamentoModalAddArquivo\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 9,\n        columnNumber: 48\n      }, this)]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 9,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: _jsxDEV(_components.strong, {\n        children: \"1. Teste de Snapshot:\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 11,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 11,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Certifique-se de que o componente renderiza corretamente e que mudanças não-intencionais no layout são identificadas.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 13,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      children: _jsxDEV(_components.code, {\n        className: \"language-javascript\",\n        children: \"it('matches snapshot', () => {\\r\\n  const { asFragment } = renderComponent();\\r\\n  expect(asFragment()).toMatchSnapshot();\\r\\n});\\n\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 15,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 15,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: _jsxDEV(_components.strong, {\n        children: \"2. Fechamento do Modal ao Clicar no Botão \\\"Fechar\\\":\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 22,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 22,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Valide que o modal pode ser fechado usando o botão de fechar.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 24,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      children: _jsxDEV(_components.code, {\n        className: \"language-javascript\",\n        children: \"it('Should be able close modal add Arquivo', () => {\\r\\n  const closeModalMock = jest.fn();\\r\\n  const { getByTestId } = renderComponent({\\r\\n    formModalStatus: useFormMock({\\r\\n      value: { adicionarArquivo: true },\\r\\n      spySetAll: closeModalMock\\r\\n    })\\r\\n  });\\r\\n\\r\\n  fireEvent.click(getByTestId('detalhe-pagamento_modal-add-testid-close'));\\r\\n\\r\\n  expect(closeModalMock).toHaveBeenCalledWith({ adicionarArquivo: false });\\r\\n});\\n\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 26,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 26,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: _jsxDEV(_components.strong, {\n        children: \"3. Seleção de Arquivo:\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 42,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 42,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Teste a funcionalidade de seleção de arquivo, simulando a ação do usuário.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 44,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      children: _jsxDEV(_components.code, {\n        className: \"language-javascript\",\n        children: \"it('Should be able select File', () => {\\r\\n  const useSetForm = jest.fn();\\r\\n  const fileMock = new File(['fake file contents'], 'fake-file.jpg', {\\r\\n    type: 'image/jpeg'\\r\\n  });\\r\\n  const { getByTestId } = renderComponent({\\r\\n    formAdicionarArquivo: useFormMock({\\r\\n      set: () => useSetForm,\\r\\n      value: { file: {} }\\r\\n    })\\r\\n  });\\r\\n\\r\\n  const inputFile = getByTestId(\\r\\n    'detalhes-pagamentos_modal-add-arquivo-file-select'\\r\\n  ).children[3];\\r\\n  fireEvent.change(inputFile, { target: { files: [fileMock] } });\\r\\n\\r\\n  expect(useSetForm).toBeCalledWith(undefined);\\r\\n});\\n\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 46,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 46,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: _jsxDEV(_components.strong, {\n        children: \"4. Exibição do Nome do Arquivo Selecionado:\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 68,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 68,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Garanta que o nome do arquivo selecionado seja exibido corretamente.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 70,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      children: _jsxDEV(_components.code, {\n        className: \"language-javascript\",\n        children: \"it('Should be able show selected name archive', () => {\\r\\n  const { getByText } = renderComponent({\\r\\n    formAdicionarArquivo: useFormMock({\\r\\n      value: { file: { name: 'Nome do arquivo' } }\\r\\n    })\\r\\n  });\\r\\n\\r\\n  expect(getByText('Nome do arquivo')).toBeInTheDocument();\\r\\n});\\n\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 72,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 72,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: _jsxDEV(_components.strong, {\n        children: \"5. Remoção do Arquivo Selecionado:\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 84,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 84,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Valide que o arquivo selecionado pode ser removido corretamente.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 86,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      children: _jsxDEV(_components.code, {\n        className: \"language-javascript\",\n        children: \"it('Should be able delete file selected', () => {\\r\\n  const deleteFileMock = jest.fn();\\r\\n  const { getByTestId } = renderComponent({\\r\\n    onDeleteFile: deleteFileMock,\\r\\n    formAdicionarArquivo: useFormMock({\\r\\n      value: { file: { name: 'Nome do arquivo' } }\\r\\n    })\\r\\n  });\\r\\n\\r\\n  fireEvent.click(\\r\\n    getByTestId('detalhes-pagamentos_modal-add-arquivo-delete-file')\\r\\n  );\\r\\n\\r\\n  expect(deleteFileMock).toHaveBeenCalledWith(undefined);\\r\\n});\\n\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 88,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 88,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 106,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: _jsxDEV(_components.strong, {\n        children: \"Padrão Test ID para capturar elementos\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 108,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 108,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: _jsxDEV(_components.img, {\n        src: \"/assets/img/guide-testing-testid.png\",\n        alt: \"testid pattern\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 110,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 110,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Keep calm and code on 🤘.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 112,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsxDEV(MDXLayout, Object.assign({}, props, {\n    children: _jsxDEV(_createMdxContent, props, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }), undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\n// =========\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Guide/Testing', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;"],"names":[],"sourceRoot":""}